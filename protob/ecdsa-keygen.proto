// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

option go_package = "github.com/binance-chain/tss-lib/ecdsa/keygen";

/*
 * Represents a BROADCAST message sent during Round 1 of the ECDSA TSS keygen protocol.
 */
message KGRound1Message {
    bytes commitment = 1;
    bytes paillier_n = 2;
    bytes n_tilde = 3;
    bytes h1 = 4;
    bytes h2 = 5;
    repeated bytes dlnproof_1 = 6;
    repeated bytes dlnproof_2 = 7;
}

/*
 * Represents a BROADCAST message sent to each party during Round 2 of the ECDSA TSS keygen protocol.
 */
message KGRound2Message {
    repeated bytes de_commitment = 1;
    repeated bytes encryptedShare = 2;
}

/*
 * Represents a BROADCAST message sent to each party during Round 3 of the ECDSA TSS keygen protocol.
 */
message KGRound3Message {
    message SuccessData {
        repeated bytes paillier_proof = 1;
    }
    message AbortDataEntry{
        // index of the malicious node
        int32 index=1;
        // vss share itself
        bytes share_m = 2;
        // auxiliary r of paillier encryption
        bytes share_x = 3;
    }
    message AbortData {
        repeated AbortDataEntry item = 2;
    }
    oneof content {
        SuccessData success = 1;
        AbortData abort = 2;
    }
}
